@using BudgetApp.Models.Helpers;
@model BudgetApp.Models.ViewModels.InitialBudgetViewModel

@{
    ViewData["Title"] = "Create Initial Budget";
}

<h2>Create Initial Budget</h2>

@using (Html.BeginForm("Create", "Create", FormMethod.Post))
{
    <div id="incomesContainer">
        <h4>Incomes</h4>
        @for (int i = 0; i < Model.Incomes.Count; i++)
        {
            <div class="income-entry">
                <!-- Dropdown para seleccionar CategoryId -->
                @Html.DropDownList(
                         $"Incomes[{i}].CategoryId",
                         new SelectList(Model.IncomeCategories, "Id", "Name", Model.Incomes[i].CategoryId),
                         new { @name = $"Incomes[{i}].CategoryId" }
                         )

                <!-- Campo para ingresar el valor proyectado (ProjectedAmount) -->
                @Html.TextBoxFor(m => m.Incomes[i].ProjectedAmount, new { @name = $"Incomes[{i}].ProjectedAmount" })

                <!-- Campo oculto para TransactionType (fijo para ingresos: 2) -->
                @Html.HiddenFor(m => m.Incomes[i].TransactionType, new { @name = $"Incomes[{i}].TransactionType", @value = MasterData.TransactionTypes.Income })
            </div>
        }
    </div>
    <button type="button" id="addIncomeButton">Add Income</button>
    <div id="expense-container">
        <h4>Expenses</h4>
        @for (int i = 0; i < Model.Expenses.Count; i++)
        {
            <div class="expense-entry">
                <!-- Dropdown para seleccionar CategoryId -->
                @Html.DropDownList(
                         $"Expenses[{i}].CategoryId",
                         new SelectList(Model.ExpenseCategories, "Id", "Name", Model.Expenses[i].CategoryId),
                         new { @name = $"Expenses[{i}].CategoryId" }
                         )

                <!-- Campo para ingresar el valor proyectado (ProjectedAmount) -->
                @Html.TextBoxFor(m => m.Expenses[i].ProjectedAmount, new { @name = $"Expenses[{i}].ProjectedAmount" })

                <!-- Campo oculto para TransactionType (fijo para gastos: 1) -->
                @Html.HiddenFor(m => m.Expenses[i].TransactionType, new { @name = $"Expenses[{i}].TransactionType", @value = MasterData.TransactionTypes.Expense })
            </div>
        }
    </div>
    <button type="button" id="add-expense-btn" class="btn btn-primary">Add Expense</button>

    <button type="submit">Submit</button>
}
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newCategoryModal">
    Add New Category
</button>
@Html.Partial("~/Views/Modals/CreateCategory.cshtml", new BudgetApp.Models.Dtos.CategoryDto())

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $('#addIncomeButton').click(function () {
            var newIndex = $('.income-entry').length;
            var newEntry = `
                <div class="income-entry">
                    <select name="Incomes[${newIndex}].CategoryId">
                    @foreach (var category in Model.IncomeCategories)
                    {
                                <option value="@category.Id">@category.Name</option>
                    }
                    </select>
                    <input type="text" name="Incomes[${newIndex}].ProjectedAmount" />
                    <input type="hidden" name="Incomes[${newIndex}].TransactionType" value="2" />
                </div>
            `;

            $('#incomesContainer').append(newEntry);
        });
        $('#add-expense-btn').on('click', function () {
            var expenseIndex = $('.expense-entry').length;
            const newExpenseEntry = `
                    <div class="expense-entry">
                        <select name="Expenses[${expenseIndex}].CategoryId">
                        @foreach (var category in Model.ExpenseCategories)
                        {
                                    <option value="@category.Id">@category.Name</option>
                        }
                        </select>
                        <input type="text" name="Expenses[${expenseIndex}].ProjectedAmount"/>
                        <input type="hidden" name="Expenses[${expenseIndex}].TransactionType" value="@MasterData.TransactionTypes.Expense" />
                    </div>
                `;

            $('#expense-container').append(newExpenseEntry);
        });
    });
</script>